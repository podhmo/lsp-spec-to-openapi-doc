[
  {
    "language": "typescript",
    "lines": "interface Message {\n\tjsonrpc: string;\n}"
  },
  {
    "language": "typescript",
    "lines": "interface RequestMessage extends Message {\n\n\t/**\n\t * The request id.\n\t */\n\tid: number | string;\n\n\t/**\n\t * The method to be invoked.\n\t */\n\tmethod: string;\n\n\t/**\n\t * The method's params.\n\t */\n\tparams?: any\n}"
  },
  {
    "language": "typescript",
    "lines": "interface ResponseMessage extends Message {\n\t/**\n\t * The request id.\n\t */\n\tid: number | string;\n\n\t/**\n\t * The result of a request. This can be omitted in\n\t * the case of an error.\n\t */\n\tresult?: any;\n\n\t/**\n\t * The error object in case a request fails.\n\t */\n\terror?: ResponseError<any>;\n}\n\ninterface ResponseError<D> {\n\t/**\n\t * A number indicating the error type that occurred.\n\t */\n\tcode: number;\n\n\t/**\n\t * A string providing a short description of the error.\n\t */\n\tmessage: string;\n\n\t/**\n\t * A Primitive or Structured value that contains additional\n\t * information about the error. Can be omitted.\n\t */\n\tdata?: D;\n}\n\nexport namespace ErrorCodes {\n\texport const ParseError: number = -32700;\n\texport const InvalidRequest: number = -32600;\n\texport const MethodNotFound: number = -32601;\n\texport const InvalidParams: number = -32602;\n\texport const InternalError: number = -32603;\n\texport const serverErrorStart: number = -32099;\n\texport const serverErrorEnd: number = -32000;\n}"
  },
  {
    "language": "typescript",
    "lines": "interface NotificationMessage extends Message {\n\t/**\n\t * The method to be invoked.\n\t */\n\tmethod: string;\n\n\t/**\n\t * The notification's params.\n\t */\n\tparams?: any\n}"
  },
  {
    "language": "typescript",
    "lines": "interface CancelParams {\n\t/**\n\t * The request id to cancel.\n\t */\n\tid: number | string;\n}"
  },
  {
    "language": "typescript",
    "lines": "interface Position {\n\t/**\n\t * Line position in a document (zero-based).\n\t */\n\tline: number;\n\n\t/**\n\t * Character offset on a line in a document (zero-based).\n\t */\n\tcharacter: number;\n}"
  },
  {
    "language": "typescript",
    "lines": "interface Range {\n\t/**\n\t * The range's start position.\n\t */\n\tstart: Position;\n\n\t/**\n\t * The range's end position.\n\t */\n\tend: Position;\n}"
  },
  {
    "language": "typescript",
    "lines": "interface Location {\n\turi: string;\n\trange: Range;\n}"
  },
  {
    "language": "typescript",
    "lines": "interface Diagnostic {\n\t/**\n\t * The range at which the message applies.\n\t */\n\trange: Range;\n\n\t/**\n\t * The diagnostic's severity. Can be omitted. If omitted it is up to the\n\t * client to interpret diagnostics as error, warning, info or hint.\n\t */\n\tseverity?: number;\n\n\t/**\n\t * The diagnostic's code. Can be omitted.\n\t */\n\tcode?: number | string;\n\n\t/**\n\t * A human-readable string describing the source of this\n\t * diagnostic, e.g. 'typescript' or 'super lint'.\n\t */\n\tsource?: string;\n\n\t/**\n\t * The diagnostic's message.\n\t */\n\tmessage: string;\n}"
  },
  {
    "language": "typescript",
    "lines": "enum DiagnosticSeverity {\n\t/**\n\t * Reports an error.\n\t */\n\tError = 1,\n\t/**\n\t * Reports a warning.\n\t */\n\tWarning = 2,\n\t/**\n\t * Reports an information.\n\t */\n\tInformation = 3,\n\t/**\n\t * Reports a hint.\n\t */\n\tHint = 4\n}"
  },
  {
    "language": "typescript",
    "lines": "interface Command {\n\t/**\n\t * Title of the command, like `save`.\n\t */\n\ttitle: string;\n\t/**\n\t * The identifier of the actual command handler.\n\t */\n\tcommand: string;\n\t/**\n\t * Arguments that the command handler should be\n\t * invoked with.\n\t */\n\targuments?: any[];\n}"
  },
  {
    "language": "typescript",
    "lines": "interface TextEdit {\n\t/**\n\t * The range of the text document to be manipulated. To insert\n\t * text into a document create a range where start === end.\n\t */\n\trange: Range;\n\n\t/**\n\t * The string to be inserted. For delete operations use an\n\t * empty string.\n\t */\n\tnewText: string;\n}"
  }
]
