{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "Message": {
            "description": "A general message as defined by JSON-RPC. The language server protocol always uses \"2.0\" as the jsonrpc version.",
            "title": "Message",
            "type": "object",
            "properties": {
                "jsonrpc": {
                    "type": "string",
                    "title": "jsonrpc"
                }
            },
            "required": [
                "jsonrpc"
            ]
        },
        "RequestMessage": {
            "description": "A request message to describe a request between the client and the server. Every processed request must send a response back to the sender of the request.",
            "title": "RequestMessage",
            "type": "object",
            "properties": {
                "id": {
                    "description": "The request id.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "id"
                },
                "method": {
                    "description": "The method to be invoked.",
                    "type": "string",
                    "title": "method"
                },
                "params": {
                    "description": "The method's params.",
                    "title": "params"
                },
                "jsonrpc": {
                    "type": "string",
                    "title": "jsonrpc"
                }
            },
            "required": [
                "id",
                "jsonrpc",
                "method"
            ]
        },
        "ResponseMessage": {
            "description": "Response Message sent as a result of a request.",
            "title": "ResponseMessage",
            "type": "object",
            "properties": {
                "id": {
                    "description": "The request id.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "id"
                },
                "result": {
                    "description": "The result of a request. This can be omitted in\nthe case of an error.",
                    "title": "result"
                },
                "error": {
                    "description": "The error object in case a request fails.",
                    "$ref": "#/definitions/ResponseError<any>",
                    "title": "error"
                },
                "jsonrpc": {
                    "type": "string",
                    "title": "jsonrpc"
                }
            },
            "required": [
                "id",
                "jsonrpc"
            ]
        },
        "ResponseError": {
            "$ref": "#/definitions/ResponseError<D>"
        },
        "NotificationMessage": {
            "description": "A notification message. A processed notification message must not send a response back. They work like events.",
            "title": "NotificationMessage",
            "type": "object",
            "properties": {
                "method": {
                    "description": "The method to be invoked.",
                    "type": "string",
                    "title": "method"
                },
                "params": {
                    "description": "The notification's params.",
                    "title": "params"
                },
                "jsonrpc": {
                    "type": "string",
                    "title": "jsonrpc"
                }
            },
            "required": [
                "jsonrpc",
                "method"
            ]
        },
        "CancelParams": {
            "title": "CancelParams",
            "type": "object",
            "properties": {
                "id": {
                    "description": "The request id to cancel.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "id"
                }
            },
            "required": [
                "id"
            ]
        },
        "Position": {
            "description": "Position in a text document expressed as zero-based line and character offset. A position is between two characters like an 'insert' cursor in a editor.",
            "title": "Position",
            "type": "object",
            "properties": {
                "line": {
                    "description": "Line position in a document (zero-based).",
                    "type": "number",
                    "title": "line"
                },
                "character": {
                    "description": "Character offset on a line in a document (zero-based).",
                    "type": "number",
                    "title": "character"
                }
            },
            "required": [
                "character",
                "line"
            ]
        },
        "Range": {
            "description": "A range in a text document expressed as (zero-based) start and end positions. A range is comparable to a selection in an editor. Therefore the end position is exclusive.",
            "title": "Range",
            "type": "object",
            "properties": {
                "start": {
                    "$ref": "#/definitions/Position",
                    "description": "The range's start position.",
                    "title": "start"
                },
                "end": {
                    "$ref": "#/definitions/Position",
                    "description": "The range's end position.",
                    "title": "end"
                }
            },
            "required": [
                "end",
                "start"
            ]
        },
        "Location": {
            "description": "Represents a location inside a resource, such as a line inside a text file.",
            "title": "Location",
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "title": "uri"
                },
                "range": {
                    "$ref": "#/definitions/Range",
                    "title": "range"
                }
            },
            "required": [
                "range",
                "uri"
            ]
        },
        "Diagnostic": {
            "description": "Represents a diagnostic, such as a compiler error or warning. Diagnostic objects are only valid in the scope of a resource.",
            "title": "Diagnostic",
            "type": "object",
            "properties": {
                "range": {
                    "$ref": "#/definitions/Range",
                    "description": "The range at which the message applies.",
                    "title": "range"
                },
                "severity": {
                    "description": "The diagnostic's severity. Can be omitted. If omitted it is up to the\nclient to interpret diagnostics as error, warning, info or hint.",
                    "type": "number",
                    "title": "severity"
                },
                "code": {
                    "description": "The diagnostic's code. Can be omitted.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "code"
                },
                "source": {
                    "description": "A human-readable string describing the source of this\ndiagnostic, e.g. 'typescript' or 'super lint'.",
                    "type": "string",
                    "title": "source"
                },
                "message": {
                    "description": "The diagnostic's message.",
                    "type": "string",
                    "title": "message"
                }
            },
            "required": [
                "message",
                "range"
            ]
        },
        "DiagnosticSeverity": {
            "description": "The protocol currently supports the following diagnostic severities:",
            "title": "DiagnosticSeverity",
            "enum": [
                1,
                2,
                3,
                4
            ],
            "type": "number"
        },
        "Command": {
            "description": "Represents a reference to a command. Provides a title which will be used to represent a command in the UI. Commands are identitifed using a string identifier and the protocol currently doesn't specify a set of well known commands. So executing a command requires some tool extension code.",
            "title": "Command",
            "type": "object",
            "properties": {
                "title": {
                    "description": "Title of the command, like `save`.",
                    "type": "string",
                    "title": "title"
                },
                "command": {
                    "description": "The identifier of the actual command handler.",
                    "type": "string",
                    "title": "command"
                },
                "arguments": {
                    "description": "Arguments that the command handler should be\ninvoked with.",
                    "type": "array",
                    "items": {},
                    "title": "arguments"
                }
            },
            "required": [
                "command",
                "title"
            ]
        },
        "TextEdit": {
            "description": "A textual edit applicable to a text document.",
            "title": "TextEdit",
            "type": "object",
            "properties": {
                "range": {
                    "$ref": "#/definitions/Range",
                    "description": "The range of the text document to be manipulated. To insert\ntext into a document create a range where start === end.",
                    "title": "range"
                },
                "newText": {
                    "description": "The string to be inserted. For delete operations use an\nempty string.",
                    "type": "string",
                    "title": "newText"
                }
            },
            "required": [
                "newText",
                "range"
            ]
        },
        "WorkspaceEdit": {
            "description": "A workspace edit represents changes to many resources managed in the workspace.",
            "title": "WorkspaceEdit",
            "type": "object",
            "properties": {
                "changes": {
                    "description": "Holds changes to existing resources.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/TextEdit"
                        }
                    },
                    "title": "changes"
                }
            },
            "required": [
                "changes"
            ]
        },
        "TextDocumentIdentifier": {
            "description": "Text documents are identified using a URI. On the protocol level, URIs are passed as strings. The corresponding JSON structure looks like this:",
            "title": "TextDocumentIdentifier",
            "type": "object",
            "properties": {
                "uri": {
                    "description": "The text document's URI.",
                    "type": "string",
                    "title": "uri"
                }
            },
            "required": [
                "uri"
            ]
        },
        "TextDocumentItem": {
            "description": ">**New:** An item to transfer a text document from the client to the server.",
            "title": "TextDocumentItem",
            "type": "object",
            "properties": {
                "uri": {
                    "description": "The text document's URI.",
                    "type": "string",
                    "title": "uri"
                },
                "languageId": {
                    "description": "The text document's language identifier.",
                    "type": "string",
                    "title": "languageId"
                },
                "version": {
                    "description": "The version number of this document (it will strictly increase after each\nchange, including undo/redo).",
                    "type": "number",
                    "title": "version"
                },
                "text": {
                    "description": "The content of the opened text document.",
                    "type": "string",
                    "title": "text"
                }
            },
            "required": [
                "languageId",
                "text",
                "uri",
                "version"
            ]
        },
        "VersionedTextDocumentIdentifier": {
            "description": ">**New:** An identifier to denote a specific version of a text document.",
            "title": "VersionedTextDocumentIdentifier",
            "type": "object",
            "properties": {
                "version": {
                    "description": "The version number of this document.",
                    "type": "number",
                    "title": "version"
                },
                "uri": {
                    "description": "The text document's URI.",
                    "type": "string",
                    "title": "uri"
                }
            },
            "required": [
                "uri",
                "version"
            ]
        },
        "TextDocumentPositionParams": {
            "description": ">**Changed:** Was `TextDocumentPosition` in 1.0 with inlined parameters\n\nA parameter literal used in requests to pass a text document and a position inside that document.",
            "title": "TextDocumentPositionParams",
            "type": "object",
            "properties": {
                "textDocument": {
                    "$ref": "#/definitions/TextDocumentIdentifier",
                    "description": "The text document.",
                    "title": "textDocument"
                },
                "position": {
                    "$ref": "#/definitions/Position",
                    "description": "The position inside the text document.",
                    "title": "position"
                }
            },
            "required": [
                "position",
                "textDocument"
            ]
        },
        "InitializeParams": {
            "title": "InitializeParams",
            "type": "object",
            "properties": {
                "processId": {
                    "description": "The process Id of the parent process that started\nthe server. Is null if the process has not been started by another process.\nIf the parent process is not alive then the server should exit (see exit notification) its process.",
                    "type": "number",
                    "title": "processId"
                },
                "rootPath": {
                    "description": "The rootPath of the workspace. Is null\nif no folder is open.",
                    "type": "string",
                    "title": "rootPath"
                },
                "initializationOptions": {
                    "description": "User provided initialization options.",
                    "title": "initializationOptions"
                },
                "capabilities": {
                    "$ref": "#/definitions/ClientCapabilities",
                    "description": "The capabilities provided by the client (editor)",
                    "title": "capabilities"
                }
            },
            "required": [
                "capabilities"
            ]
        },
        "ClientCapabilities": {
            "title": "ClientCapabilities",
            "type": "object"
        },
        "InitializeResult": {
            "title": "InitializeResult",
            "type": "object",
            "properties": {
                "capabilities": {
                    "$ref": "#/definitions/ServerCapabilities",
                    "description": "The capabilities the language server provides.",
                    "title": "capabilities"
                }
            },
            "required": [
                "capabilities"
            ]
        },
        "InitializeError": {
            "title": "InitializeError",
            "type": "object",
            "properties": {
                "retry": {
                    "description": "Indicates whether the client should retry to send the\ninitialize request after showing the message provided\nin the ResponseError.",
                    "type": "boolean",
                    "title": "retry"
                }
            },
            "required": [
                "retry"
            ]
        },
        "TextDocumentSyncKind": {
            "description": "Defines how the host (editor) should sync document changes to the language server.",
            "title": "TextDocumentSyncKind",
            "enum": [
                0,
                1,
                2
            ],
            "type": "number"
        },
        "CompletionOptions": {
            "description": "Completion options.",
            "title": "CompletionOptions",
            "type": "object",
            "properties": {
                "resolveProvider": {
                    "description": "The server provides support to resolve additional information for a completion item.",
                    "type": "boolean",
                    "title": "resolveProvider"
                },
                "triggerCharacters": {
                    "description": "The characters that trigger completion automatically.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "triggerCharacters"
                }
            }
        },
        "SignatureHelpOptions": {
            "description": "Signature help options.",
            "title": "SignatureHelpOptions",
            "type": "object",
            "properties": {
                "triggerCharacters": {
                    "description": "The characters that trigger signature help automatically.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "triggerCharacters"
                }
            }
        },
        "CodeLensOptions": {
            "description": "Code Lens options.",
            "title": "CodeLensOptions",
            "type": "object",
            "properties": {
                "resolveProvider": {
                    "description": "Code lens has a resolve provider as well.",
                    "type": "boolean",
                    "title": "resolveProvider"
                }
            }
        },
        "DocumentOnTypeFormattingOptions": {
            "description": "Format document on type options",
            "title": "DocumentOnTypeFormattingOptions",
            "type": "object",
            "properties": {
                "firstTriggerCharacter": {
                    "description": "A character on which formatting should be triggered, like `}`.",
                    "type": "string",
                    "title": "firstTriggerCharacter"
                },
                "moreTriggerCharacter": {
                    "description": "More trigger characters.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "moreTriggerCharacter"
                }
            },
            "required": [
                "firstTriggerCharacter"
            ]
        },
        "ServerCapabilities": {
            "title": "ServerCapabilities",
            "type": "object",
            "properties": {
                "textDocumentSync": {
                    "description": "Defines how text documents are synced.",
                    "type": "number",
                    "title": "textDocumentSync"
                },
                "hoverProvider": {
                    "description": "The server provides hover support.",
                    "type": "boolean",
                    "title": "hoverProvider"
                },
                "completionProvider": {
                    "description": "The server provides completion support.",
                    "$ref": "#/definitions/CompletionOptions",
                    "title": "completionProvider"
                },
                "signatureHelpProvider": {
                    "description": "The server provides signature help support.",
                    "$ref": "#/definitions/SignatureHelpOptions",
                    "title": "signatureHelpProvider"
                },
                "definitionProvider": {
                    "description": "The server provides goto definition support.",
                    "type": "boolean",
                    "title": "definitionProvider"
                },
                "referencesProvider": {
                    "description": "The server provides find references support.",
                    "type": "boolean",
                    "title": "referencesProvider"
                },
                "documentHighlightProvider": {
                    "description": "The server provides document highlight support.",
                    "type": "boolean",
                    "title": "documentHighlightProvider"
                },
                "documentSymbolProvider": {
                    "description": "The server provides document symbol support.",
                    "type": "boolean",
                    "title": "documentSymbolProvider"
                },
                "workspaceSymbolProvider": {
                    "description": "The server provides workspace symbol support.",
                    "type": "boolean",
                    "title": "workspaceSymbolProvider"
                },
                "codeActionProvider": {
                    "description": "The server provides code actions.",
                    "type": "boolean",
                    "title": "codeActionProvider"
                },
                "codeLensProvider": {
                    "description": "The server provides code lens.",
                    "$ref": "#/definitions/CodeLensOptions",
                    "title": "codeLensProvider"
                },
                "documentFormattingProvider": {
                    "description": "The server provides document formatting.",
                    "type": "boolean",
                    "title": "documentFormattingProvider"
                },
                "documentRangeFormattingProvider": {
                    "description": "The server provides document range formatting.",
                    "type": "boolean",
                    "title": "documentRangeFormattingProvider"
                },
                "documentOnTypeFormattingProvider": {
                    "description": "The server provides document formatting on typing.",
                    "$ref": "#/definitions/DocumentOnTypeFormattingOptions",
                    "title": "documentOnTypeFormattingProvider"
                },
                "renameProvider": {
                    "description": "The server provides rename support.",
                    "type": "boolean",
                    "title": "renameProvider"
                }
            }
        },
        "ShowMessageParams": {
            "title": "ShowMessageParams",
            "type": "object",
            "properties": {
                "type": {
                    "description": "The message type. See {@link MessageType}.",
                    "type": "number",
                    "title": "type"
                },
                "message": {
                    "description": "The actual message.",
                    "type": "string",
                    "title": "message"
                }
            },
            "required": [
                "message",
                "type"
            ]
        },
        "MessageType": {
            "title": "MessageType",
            "enum": [
                1,
                2,
                3,
                4
            ],
            "type": "number"
        },
        "ShowMessageRequestParams": {
            "title": "ShowMessageRequestParams",
            "type": "object",
            "properties": {
                "type": {
                    "description": "The message type. See {@link MessageType}",
                    "type": "number",
                    "title": "type"
                },
                "message": {
                    "description": "The actual message",
                    "type": "string",
                    "title": "message"
                },
                "actions": {
                    "description": "The message action items to present.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MessageActionItem"
                    },
                    "title": "actions"
                }
            },
            "required": [
                "message",
                "type"
            ]
        },
        "MessageActionItem": {
            "title": "MessageActionItem",
            "type": "object",
            "properties": {
                "title": {
                    "description": "A short title like 'Retry', 'Open Log' etc.",
                    "type": "string",
                    "title": "title"
                }
            },
            "required": [
                "title"
            ]
        },
        "LogMessageParams": {
            "title": "LogMessageParams",
            "type": "object",
            "properties": {
                "type": {
                    "description": "The message type. See {@link MessageType}",
                    "type": "number",
                    "title": "type"
                },
                "message": {
                    "description": "The actual message",
                    "type": "string",
                    "title": "message"
                }
            },
            "required": [
                "message",
                "type"
            ]
        },
        "DidChangeConfigurationParams": {
            "title": "DidChangeConfigurationParams",
            "type": "object",
            "properties": {
                "settings": {
                    "description": "The actual changed settings",
                    "title": "settings"
                }
            },
            "required": [
                "settings"
            ]
        },
        "DidOpenTextDocumentParams": {
            "title": "DidOpenTextDocumentParams",
            "type": "object",
            "properties": {
                "textDocument": {
                    "$ref": "#/definitions/TextDocumentItem",
                    "description": "The document that was opened.",
                    "title": "textDocument"
                }
            },
            "required": [
                "textDocument"
            ]
        },
        "DidChangeTextDocumentParams": {
            "title": "DidChangeTextDocumentParams",
            "type": "object",
            "properties": {
                "textDocument": {
                    "$ref": "#/definitions/VersionedTextDocumentIdentifier",
                    "description": "The document that did change. The version number points\nto the version after all provided content changes have\nbeen applied.",
                    "title": "textDocument"
                },
                "contentChanges": {
                    "description": "The actual content changes.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TextDocumentContentChangeEvent"
                    },
                    "title": "contentChanges"
                }
            },
            "required": [
                "contentChanges",
                "textDocument"
            ]
        },
        "TextDocumentContentChangeEvent": {
            "description": "An event describing a change to a text document. If range and rangeLength are omitted\nthe new text is considered to be the full content of the document.",
            "title": "TextDocumentContentChangeEvent",
            "type": "object",
            "properties": {
                "range": {
                    "description": "The range of the document that changed.",
                    "$ref": "#/definitions/Range",
                    "title": "range"
                },
                "rangeLength": {
                    "description": "The length of the range that got replaced.",
                    "type": "number",
                    "title": "rangeLength"
                },
                "text": {
                    "description": "The new text of the document.",
                    "type": "string",
                    "title": "text"
                }
            },
            "required": [
                "text"
            ]
        },
        "DidCloseTextDocumentParams": {
            "title": "DidCloseTextDocumentParams",
            "type": "object",
            "properties": {
                "textDocument": {
                    "$ref": "#/definitions/TextDocumentIdentifier",
                    "description": "The document that was closed.",
                    "title": "textDocument"
                }
            },
            "required": [
                "textDocument"
            ]
        },
        "DidSaveTextDocumentParams": {
            "description": ">**New:** The document save notification is sent from the client to the server when the document was saved in the client.\n\n* method: 'textDocument/didSave'\n* params: `DidSaveTextDocumentParams` defined as follows:",
            "title": "DidSaveTextDocumentParams",
            "type": "object",
            "properties": {
                "textDocument": {
                    "$ref": "#/definitions/TextDocumentIdentifier",
                    "description": "The document that was saved.",
                    "title": "textDocument"
                }
            },
            "required": [
                "textDocument"
            ]
        },
        "DidChangeWatchedFilesParams": {
            "title": "DidChangeWatchedFilesParams",
            "type": "object",
            "properties": {
                "changes": {
                    "description": "The actual file events.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FileEvent"
                    },
                    "title": "changes"
                }
            },
            "required": [
                "changes"
            ]
        },
        "FileChangeType": {
            "description": "The file event type.",
            "title": "FileChangeType",
            "enum": [
                1,
                2,
                3
            ],
            "type": "number"
        },
        "FileEvent": {
            "description": "An event describing a file change.",
            "title": "FileEvent",
            "type": "object",
            "properties": {
                "uri": {
                    "description": "The file's URI.",
                    "type": "string",
                    "title": "uri"
                },
                "type": {
                    "description": "The change type.",
                    "type": "number",
                    "title": "type"
                }
            },
            "required": [
                "type",
                "uri"
            ]
        },
        "PublishDiagnosticsParams": {
            "title": "PublishDiagnosticsParams",
            "type": "object",
            "properties": {
                "uri": {
                    "description": "The URI for which diagnostic information is reported.",
                    "type": "string",
                    "title": "uri"
                },
                "diagnostics": {
                    "description": "An array of diagnostic information items.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Diagnostic"
                    },
                    "title": "diagnostics"
                }
            },
            "required": [
                "diagnostics",
                "uri"
            ]
        },
        "CompletionList": {
            "description": "Represents a collection of [completion items](#CompletionItem) to be presented\nin the editor.",
            "title": "CompletionList",
            "type": "object",
            "properties": {
                "isIncomplete": {
                    "description": "This list it not complete. Further typing should result in recomputing\nthis list.",
                    "type": "boolean",
                    "title": "isIncomplete"
                },
                "items": {
                    "description": "The completion items.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CompletionItem"
                    },
                    "title": "items"
                }
            },
            "required": [
                "isIncomplete",
                "items"
            ]
        },
        "CompletionItem": {
            "title": "CompletionItem",
            "type": "object",
            "properties": {
                "label": {
                    "description": "The label of this completion item. By default\nalso the text that is inserted when selecting\nthis completion.",
                    "type": "string",
                    "title": "label"
                },
                "kind": {
                    "description": "The kind of this completion item. Based of the kind\nan icon is chosen by the editor.",
                    "type": "number",
                    "title": "kind"
                },
                "detail": {
                    "description": "A human-readable string with additional information\nabout this item, like type or symbol information.",
                    "type": "string",
                    "title": "detail"
                },
                "documentation": {
                    "description": "A human-readable string that represents a doc-comment.",
                    "type": "string",
                    "title": "documentation"
                },
                "sortText": {
                    "description": "A string that should be used when comparing this item\nwith other items. When `falsy` the label is used.",
                    "type": "string",
                    "title": "sortText"
                },
                "filterText": {
                    "description": "A string that should be used when filtering a set of\ncompletion items. When `falsy` the label is used.",
                    "type": "string",
                    "title": "filterText"
                },
                "insertText": {
                    "description": "A string that should be inserted a document when selecting\nthis completion. When `falsy` the label is used.",
                    "type": "string",
                    "title": "insertText"
                },
                "textEdit": {
                    "description": "An edit which is applied to a document when selecting\nthis completion. When an edit is provided the value of\ninsertText is ignored.",
                    "$ref": "#/definitions/TextEdit",
                    "title": "textEdit"
                },
                "additionalTextEdits": {
                    "description": "An optional array of additional text edits that are applied when\nselecting this completion. Edits must not overlap with the main edit\nnor with themselves.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TextEdit"
                    },
                    "title": "additionalTextEdits"
                },
                "command": {
                    "description": "An optional command that is executed *after* inserting this completion. *Note* that\nadditional modifications to the current document should be described with the\nadditionalTextEdits-property.",
                    "$ref": "#/definitions/Command",
                    "title": "command"
                },
                "data": {
                    "description": "An data entry field that is preserved on a completion item between\na completion and a completion resolve request.",
                    "title": "data"
                }
            },
            "required": [
                "label"
            ]
        },
        "CompletionItemKind": {
            "description": "The kind of a completion entry.",
            "title": "CompletionItemKind",
            "enum": [
                1,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9
            ],
            "type": "number"
        },
        "Hover": {
            "description": "The result of a hover request.",
            "title": "Hover",
            "type": "object",
            "properties": {
                "contents": {
                    "description": "The hover's content",
                    "anyOf": [
                        {
                            "type": "object",
                            "properties": {
                                "language": {
                                    "type": "string",
                                    "title": "language"
                                },
                                "value": {
                                    "type": "string",
                                    "title": "value"
                                }
                            },
                            "required": [
                                "language",
                                "value"
                            ]
                        },
                        {
                            "type": "array",
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "language": {
                                                "type": "string",
                                                "title": "language"
                                            },
                                            "value": {
                                                "type": "string",
                                                "title": "value"
                                            }
                                        },
                                        "required": [
                                            "language",
                                            "value"
                                        ]
                                    },
                                    {
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "contents"
                },
                "range": {
                    "description": "An optional range is a range inside a text document \nthat is used to visualize a hover, e.g. by changing the background color.",
                    "$ref": "#/definitions/Range",
                    "title": "range"
                }
            },
            "required": [
                "contents"
            ]
        },
        "MarkedString": {
            "anyOf": [
                {
                    "type": "object",
                    "properties": {
                        "language": {
                            "type": "string",
                            "title": "language"
                        },
                        "value": {
                            "type": "string",
                            "title": "value"
                        }
                    },
                    "required": [
                        "language",
                        "value"
                    ]
                },
                {
                    "type": "string"
                }
            ]
        },
        "SignatureHelp": {
            "description": "Signature help represents the signature of something\ncallable. There can be multiple signature but only one\nactive and only one active parameter.",
            "title": "SignatureHelp",
            "type": "object",
            "properties": {
                "signatures": {
                    "description": "One or more signatures.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SignatureInformation"
                    },
                    "title": "signatures"
                },
                "activeSignature": {
                    "description": "The active signature.",
                    "type": "number",
                    "title": "activeSignature"
                },
                "activeParameter": {
                    "description": "The active parameter of the active signature.",
                    "type": "number",
                    "title": "activeParameter"
                }
            },
            "required": [
                "signatures"
            ]
        },
        "SignatureInformation": {
            "description": "Represents the signature of something callable. A signature\ncan have a label, like a function-name, a doc-comment, and\na set of parameters.",
            "title": "SignatureInformation",
            "type": "object",
            "properties": {
                "label": {
                    "description": "The label of this signature. Will be shown in\nthe UI.",
                    "type": "string",
                    "title": "label"
                },
                "documentation": {
                    "description": "The human-readable doc-comment of this signature. Will be shown\nin the UI but can be omitted.",
                    "type": "string",
                    "title": "documentation"
                },
                "parameters": {
                    "description": "The parameters of this signature.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParameterInformation"
                    },
                    "title": "parameters"
                }
            },
            "required": [
                "label"
            ]
        },
        "ParameterInformation": {
            "description": "Represents a parameter of a callable-signature. A parameter can\nhave a label and a doc-comment.",
            "title": "ParameterInformation",
            "type": "object",
            "properties": {
                "label": {
                    "description": "The label of this parameter. Will be shown in\nthe UI.",
                    "type": "string",
                    "title": "label"
                },
                "documentation": {
                    "description": "The human-readable doc-comment of this parameter. Will be shown\nin the UI but can be omitted.",
                    "type": "string",
                    "title": "documentation"
                }
            },
            "required": [
                "label"
            ]
        },
        "ReferenceParams": {
            "title": "ReferenceParams",
            "type": "object",
            "properties": {
                "context": {
                    "$ref": "#/definitions/ReferenceContext",
                    "title": "context"
                },
                "textDocument": {
                    "$ref": "#/definitions/TextDocumentIdentifier",
                    "description": "The text document.",
                    "title": "textDocument"
                },
                "position": {
                    "$ref": "#/definitions/Position",
                    "description": "The position inside the text document.",
                    "title": "position"
                }
            },
            "required": [
                "context",
                "position",
                "textDocument"
            ]
        },
        "ReferenceContext": {
            "title": "ReferenceContext",
            "type": "object",
            "properties": {
                "includeDeclaration": {
                    "description": "Include the declaration of the current symbol.",
                    "type": "boolean",
                    "title": "includeDeclaration"
                }
            },
            "required": [
                "includeDeclaration"
            ]
        },
        "DocumentHighlight": {
            "description": "A document highlight is a range inside a text document which deserves\nspecial attention. Usually a document highlight is visualized by changing\nthe background color of its range.",
            "title": "DocumentHighlight",
            "type": "object",
            "properties": {
                "range": {
                    "$ref": "#/definitions/Range",
                    "description": "The range this highlight applies to.",
                    "title": "range"
                },
                "kind": {
                    "description": "The highlight kind, default is DocumentHighlightKind.Text.",
                    "type": "number",
                    "title": "kind"
                }
            },
            "required": [
                "range"
            ]
        },
        "DocumentHighlightKind": {
            "description": "A document highlight kind.",
            "title": "DocumentHighlightKind",
            "enum": [
                1,
                2,
                3
            ],
            "type": "number"
        },
        "DocumentSymbolParams": {
            "title": "DocumentSymbolParams",
            "type": "object",
            "properties": {
                "textDocument": {
                    "$ref": "#/definitions/TextDocumentIdentifier",
                    "description": "The text document.",
                    "title": "textDocument"
                }
            },
            "required": [
                "textDocument"
            ]
        },
        "SymbolInformation": {
            "description": "Represents information about programming constructs like variables, classes,\ninterfaces etc.",
            "title": "SymbolInformation",
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of this symbol.",
                    "type": "string",
                    "title": "name"
                },
                "kind": {
                    "description": "The kind of this symbol.",
                    "type": "number",
                    "title": "kind"
                },
                "location": {
                    "$ref": "#/definitions/Location",
                    "description": "The location of this symbol.",
                    "title": "location"
                },
                "containerName": {
                    "description": "The name of the symbol containing this symbol.",
                    "type": "string",
                    "title": "containerName"
                }
            },
            "required": [
                "kind",
                "location",
                "name"
            ]
        },
        "SymbolKind": {
            "description": "A symbol kind.",
            "title": "SymbolKind",
            "enum": [
                1,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9
            ],
            "type": "number"
        },
        "WorkspaceSymbolParams": {
            "description": "The parameters of a Workspace Symbol Request.",
            "title": "WorkspaceSymbolParams",
            "type": "object",
            "properties": {
                "query": {
                    "description": "A non-empty query string",
                    "type": "string",
                    "title": "query"
                }
            },
            "required": [
                "query"
            ]
        },
        "CodeActionParams": {
            "description": "Params for the CodeActionRequest",
            "title": "CodeActionParams",
            "type": "object",
            "properties": {
                "textDocument": {
                    "$ref": "#/definitions/TextDocumentIdentifier",
                    "description": "The document in which the command was invoked.",
                    "title": "textDocument"
                },
                "range": {
                    "$ref": "#/definitions/Range",
                    "description": "The range for which the command was invoked.",
                    "title": "range"
                },
                "context": {
                    "$ref": "#/definitions/CodeActionContext",
                    "description": "Context carrying additional information.",
                    "title": "context"
                }
            },
            "required": [
                "context",
                "range",
                "textDocument"
            ]
        },
        "CodeActionContext": {
            "description": "Contains additional diagnostic information about the context in which\na code action is run.",
            "title": "CodeActionContext",
            "type": "object",
            "properties": {
                "diagnostics": {
                    "description": "An array of diagnostics.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Diagnostic"
                    },
                    "title": "diagnostics"
                }
            },
            "required": [
                "diagnostics"
            ]
        },
        "CodeLensParams": {
            "title": "CodeLensParams",
            "type": "object",
            "properties": {
                "textDocument": {
                    "$ref": "#/definitions/TextDocumentIdentifier",
                    "description": "The document to request code lens for.",
                    "title": "textDocument"
                }
            },
            "required": [
                "textDocument"
            ]
        },
        "CodeLens": {
            "description": "A code lens represents a command that should be shown along with\nsource text, like the number of references, a way to run tests, etc.\n\nA code lens is _unresolved_ when no command is associated to it. For performance\nreasons the creation of a code lens and resolving should be done in two stages.",
            "title": "CodeLens",
            "type": "object",
            "properties": {
                "range": {
                    "$ref": "#/definitions/Range",
                    "description": "The range in which this code lens is valid. Should only span a single line.",
                    "title": "range"
                },
                "command": {
                    "description": "The command this code lens represents.",
                    "$ref": "#/definitions/Command",
                    "title": "command"
                },
                "data": {
                    "description": "A data entry field that is preserved on a code lens item between\na code lens and a code lens resolve request.",
                    "title": "data"
                }
            },
            "required": [
                "range"
            ]
        },
        "DocumentLinkParams": {
            "title": "DocumentLinkParams",
            "type": "object",
            "properties": {
                "textDocument": {
                    "$ref": "#/definitions/TextDocumentIdentifier",
                    "description": "The document to provide document links for.",
                    "title": "textDocument"
                }
            },
            "required": [
                "textDocument"
            ]
        },
        "DocumentFormattingParams": {
            "title": "DocumentFormattingParams",
            "type": "object",
            "properties": {
                "textDocument": {
                    "$ref": "#/definitions/TextDocumentIdentifier",
                    "description": "The document to format.",
                    "title": "textDocument"
                },
                "options": {
                    "$ref": "#/definitions/FormattingOptions",
                    "description": "The format options.",
                    "title": "options"
                }
            },
            "required": [
                "options",
                "textDocument"
            ]
        },
        "FormattingOptions": {
            "description": "Value-object describing what options formatting should use.",
            "title": "FormattingOptions",
            "type": "object",
            "additionalProperties": {
                "type": [
                    "string",
                    "number",
                    "boolean"
                ]
            },
            "properties": {
                "tabSize": {
                    "description": "Size of a tab in spaces.",
                    "type": "number",
                    "title": "tabSize"
                },
                "insertSpaces": {
                    "description": "Prefer spaces over tabs.",
                    "type": "boolean",
                    "title": "insertSpaces"
                }
            },
            "required": [
                "insertSpaces",
                "tabSize"
            ]
        },
        "DocumentRangeFormattingParams": {
            "title": "DocumentRangeFormattingParams",
            "type": "object",
            "properties": {
                "textDocument": {
                    "$ref": "#/definitions/TextDocumentIdentifier",
                    "description": "The document to format.",
                    "title": "textDocument"
                },
                "range": {
                    "$ref": "#/definitions/Range",
                    "description": "The range to format",
                    "title": "range"
                },
                "options": {
                    "$ref": "#/definitions/FormattingOptions",
                    "description": "The format options",
                    "title": "options"
                }
            },
            "required": [
                "options",
                "range",
                "textDocument"
            ]
        },
        "DocumentOnTypeFormattingParams": {
            "title": "DocumentOnTypeFormattingParams",
            "type": "object",
            "properties": {
                "textDocument": {
                    "$ref": "#/definitions/TextDocumentIdentifier",
                    "description": "The document to format.",
                    "title": "textDocument"
                },
                "position": {
                    "$ref": "#/definitions/Position",
                    "description": "The position at which this request was sent.",
                    "title": "position"
                },
                "ch": {
                    "description": "The character that has been typed.",
                    "type": "string",
                    "title": "ch"
                },
                "options": {
                    "$ref": "#/definitions/FormattingOptions",
                    "description": "The format options.",
                    "title": "options"
                }
            },
            "required": [
                "ch",
                "options",
                "position",
                "textDocument"
            ]
        },
        "RenameParams": {
            "title": "RenameParams",
            "type": "object",
            "properties": {
                "textDocument": {
                    "$ref": "#/definitions/TextDocumentIdentifier",
                    "description": "The document to format.",
                    "title": "textDocument"
                },
                "position": {
                    "$ref": "#/definitions/Position",
                    "description": "The position at which this request was sent.",
                    "title": "position"
                },
                "newName": {
                    "description": "The new name of the symbol. If the given name is not valid the\nrequest must return a [ResponseError](#ResponseError) with an\nappropriate message set.",
                    "type": "string",
                    "title": "newName"
                }
            },
            "required": [
                "newName",
                "position",
                "textDocument"
            ]
        },
        "textDocumentCompletionResponse": {
            "anyOf": [
                {
                    "$ref": "#/definitions/CompletionList"
                },
                {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CompletionItem"
                    }
                }
            ]
        },
        "workspaceSymbolResponse": {
            "description": "the Response of workspace/symbol",
            "type": "array",
            "items": {
                "$ref": "#/definitions/SymbolInformation"
            }
        },
        "textDocumentCodeActionResponse": {
            "description": "the Response of textDocument/codeAction",
            "type": "array",
            "items": {
                "$ref": "#/definitions/Command"
            }
        },
        "textDocumentCodeLensResponse": {
            "description": "the Response of textDocument/codeLens",
            "type": "array",
            "items": {
                "$ref": "#/definitions/CodeLens"
            }
        },
        "textDocumentFormattingResponse": {
            "description": "the Response of textDocument/formatting",
            "type": "array",
            "items": {
                "$ref": "#/definitions/TextEdit"
            }
        },
        "textDocumentRangeFormattingResponse": {
            "description": "the Response of textDocument/rangeFormatting",
            "type": "array",
            "items": {
                "$ref": "#/definitions/TextEdit"
            }
        },
        "textDocumentOnTypeFormattingResponse": {
            "description": "the Response of textDocument/onTypeFormatting",
            "type": "array",
            "items": {
                "$ref": "#/definitions/TextEdit"
            }
        },
        "ResponseError<any>": {
            "title": "ResponseError<any>",
            "type": "object",
            "properties": {
                "code": {
                    "description": "A number indicating the error type that occurred.",
                    "type": "number",
                    "title": "code"
                },
                "message": {
                    "description": "A string providing a short description of the error.",
                    "type": "string",
                    "title": "message"
                },
                "data": {
                    "description": "A Primitive or Structured value that contains additional\ninformation about the error. Can be omitted.",
                    "title": "data"
                }
            },
            "required": [
                "code",
                "message"
            ]
        },
        "ResponseError<D>": {
            "title": "ResponseError<D>",
            "type": "object",
            "properties": {
                "code": {
                    "description": "A number indicating the error type that occurred.",
                    "type": "number",
                    "title": "code"
                },
                "message": {
                    "description": "A string providing a short description of the error.",
                    "type": "string",
                    "title": "message"
                },
                "data": {
                    "description": "A Primitive or Structured value that contains additional\ninformation about the error. Can be omitted.",
                    "$ref": "#/definitions/D",
                    "title": "data"
                }
            },
            "required": [
                "code",
                "message"
            ]
        },
        "D": {
            "title": "D",
            "type": "object"
        }
    }
}
