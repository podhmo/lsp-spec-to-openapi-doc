components:
  schemas:
    CancelParams:
      type: object
      properties:
        id:
          description: The request id to cancel.
          type:
          - string
          - number
      required:
      - id
    ClientCapabilities:
      type: object
    CodeActionContext:
      description: |-
        Contains additional diagnostic information about the context in which
        a code action is run.
      type: object
      properties:
        diagnostics:
          description: An array of diagnostics.
          type: array
          items:
            $ref: '#/definitions/Diagnostic'
      required:
      - diagnostics
    CodeActionParams:
      description: Params for the CodeActionRequest
      type: object
      properties:
        textDocument:
          $ref: '#/definitions/TextDocumentIdentifier'
          description: The document in which the command was invoked.
        range:
          $ref: '#/definitions/Range'
          description: The range for which the command was invoked.
        context:
          $ref: '#/definitions/CodeActionContext'
          description: Context carrying additional information.
      required:
      - context
      - range
      - textDocument
    CodeLens:
      description: |-
        A code lens represents a command that should be shown along with
        source text, like the number of references, a way to run tests, etc.

        A code lens is _unresolved_ when no command is associated to it. For performance
        reasons the creation of a code lens and resolving should be done in two stages.
      type: object
      properties:
        range:
          $ref: '#/definitions/Range'
          description: The range in which this code lens is valid. Should only span
            a single line.
        command:
          description: The command this code lens represents.
          $ref: '#/definitions/Command'
        data:
          description: |-
            A data entry field that is preserved on a code lens item between
            a code lens and a code lens resolve request.
      required:
      - range
    CodeLensOptions:
      description: Code Lens options.
      type: object
      properties:
        resolveProvider:
          description: Code lens has a resolve provider as well.
          type: boolean
    CodeLensParams:
      type: object
      properties:
        textDocument:
          $ref: '#/definitions/TextDocumentIdentifier'
          description: The document to request code lens for.
      required:
      - textDocument
    Command:
      type: object
      properties:
        title:
          description: Title of the command, like `save`.
          type: string
          title: title
        command:
          description: The identifier of the actual command handler.
          type: string
        arguments:
          description: |-
            Arguments that the command handler should be
            invoked with.
          type: array
          items: {}
      required:
      - command
      - title
    CompletionItem:
      type: object
      properties:
        label:
          description: |-
            The label of this completion item. By default
            also the text that is inserted when selecting
            this completion.
          type: string
        kind:
          description: |-
            The kind of this completion item. Based of the kind
            an icon is chosen by the editor.
          type: number
        detail:
          description: |-
            A human-readable string with additional information
            about this item, like type or symbol information.
          type: string
        documentation:
          description: A human-readable string that represents a doc-comment.
          type: string
        sortText:
          description: |-
            A string that should be used when comparing this item
            with other items. When `falsy` the label is used.
          type: string
        filterText:
          description: |-
            A string that should be used when filtering a set of
            completion items. When `falsy` the label is used.
          type: string
        insertText:
          description: |-
            A string that should be inserted a document when selecting
            this completion. When `falsy` the label is used.
          type: string
        textEdit:
          description: |-
            An edit which is applied to a document when selecting
            this completion. When an edit is provided the value of
            insertText is ignored.
          $ref: '#/definitions/TextEdit'
        additionalTextEdits:
          description: |-
            An optional array of additional text edits that are applied when
            selecting this completion. Edits must not overlap with the main edit
            nor with themselves.
          type: array
          items:
            $ref: '#/definitions/TextEdit'
        command:
          description: |-
            An optional command that is executed *after* inserting this completion. *Note* that
            additional modifications to the current document should be described with the
            additionalTextEdits-property.
          $ref: '#/definitions/Command'
        data:
          description: |-
            An data entry field that is preserved on a completion item between
            a completion and a completion resolve request.
      required:
      - label
    CompletionItemKind:
      description: The kind of a completion entry.
      enum:
      - 1
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      - 16
      - 17
      - 18
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      type: number
    CompletionList:
      description: |-
        Represents a collection of [completion items](#CompletionItem) to be presented
        in the editor.
      type: object
      properties:
        isIncomplete:
          description: |-
            This list it not complete. Further typing should result in recomputing
            this list.
          type: boolean
        items:
          description: The completion items.
          type: array
          items:
            $ref: '#/definitions/CompletionItem'
      required:
      - isIncomplete
      - items
    CompletionOptions:
      description: Completion options.
      type: object
      properties:
        resolveProvider:
          description: The server provides support to resolve additional information
            for a completion item.
          type: boolean
        triggerCharacters:
          description: The characters that trigger completion automatically.
          type: array
          items:
            type: string
    D:
      type: object
    Diagnostic:
      type: object
      properties:
        range:
          $ref: '#/definitions/Range'
          description: The range at which the message applies.
        severity:
          description: |-
            The diagnostic's severity. Can be omitted. If omitted it is up to the
            client to interpret diagnostics as error, warning, info or hint.
          type: number
        code:
          description: The diagnostic's code. Can be omitted.
          type:
          - string
          - number
        source:
          description: |-
            A human-readable string describing the source of this
            diagnostic, e.g. 'typescript' or 'super lint'.
          type: string
        message:
          description: The diagnostic's message.
          type: string
      required:
      - message
      - range
    DiagnosticSeverity:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: number
    DidChangeConfigurationParams:
      type: object
      properties:
        settings:
          description: The actual changed settings
      required:
      - settings
    DidChangeTextDocumentParams:
      type: object
      properties:
        textDocument:
          $ref: '#/definitions/VersionedTextDocumentIdentifier'
          description: |-
            The document that did change. The version number points
            to the version after all provided content changes have
            been applied.
        contentChanges:
          description: The actual content changes.
          type: array
          items:
            $ref: '#/definitions/TextDocumentContentChangeEvent'
      required:
      - contentChanges
      - textDocument
    DidChangeWatchedFilesParams:
      type: object
      properties:
        changes:
          description: The actual file events.
          type: array
          items:
            $ref: '#/definitions/FileEvent'
      required:
      - changes
    DidCloseTextDocumentParams:
      type: object
      properties:
        textDocument:
          $ref: '#/definitions/TextDocumentIdentifier'
          description: The document that was closed.
      required:
      - textDocument
    DidOpenTextDocumentParams:
      type: object
      properties:
        textDocument:
          $ref: '#/definitions/TextDocumentItem'
          description: The document that was opened.
      required:
      - textDocument
    DidSaveTextDocumentParams:
      type: object
      properties:
        textDocument:
          $ref: '#/definitions/TextDocumentIdentifier'
          description: The document that was saved.
      required:
      - textDocument
    DocumentFormattingParams:
      type: object
      properties:
        textDocument:
          $ref: '#/definitions/TextDocumentIdentifier'
          description: The document to format.
        options:
          $ref: '#/definitions/FormattingOptions'
          description: The format options.
      required:
      - options
      - textDocument
    DocumentHighlight:
      description: |-
        A document highlight is a range inside a text document which deserves
        special attention. Usually a document highlight is visualized by changing
        the background color of its range.
      type: object
      properties:
        range:
          $ref: '#/definitions/Range'
          description: The range this highlight applies to.
        kind:
          description: The highlight kind, default is DocumentHighlightKind.Text.
          type: number
      required:
      - range
    DocumentHighlightKind:
      description: A document highlight kind.
      enum:
      - 1
      - 2
      - 3
      type: number
    DocumentLinkParams:
      type: object
      properties:
        textDocument:
          $ref: '#/definitions/TextDocumentIdentifier'
          description: The document to provide document links for.
      required:
      - textDocument
    DocumentOnTypeFormattingOptions:
      description: Format document on type options
      type: object
      properties:
        firstTriggerCharacter:
          description: A character on which formatting should be triggered, like `}`.
          type: string
        moreTriggerCharacter:
          description: More trigger characters.
          type: array
          items:
            type: string
      required:
      - firstTriggerCharacter
    DocumentOnTypeFormattingParams:
      type: object
      properties:
        textDocument:
          $ref: '#/definitions/TextDocumentIdentifier'
          description: The document to format.
        position:
          $ref: '#/definitions/Position'
          description: The position at which this request was sent.
        ch:
          description: The character that has been typed.
          type: string
        options:
          $ref: '#/definitions/FormattingOptions'
          description: The format options.
      required:
      - ch
      - options
      - position
      - textDocument
    DocumentRangeFormattingParams:
      type: object
      properties:
        textDocument:
          $ref: '#/definitions/TextDocumentIdentifier'
          description: The document to format.
        range:
          $ref: '#/definitions/Range'
          description: The range to format
        options:
          $ref: '#/definitions/FormattingOptions'
          description: The format options
      required:
      - options
      - range
      - textDocument
    DocumentSymbolParams:
      type: object
      properties:
        textDocument:
          $ref: '#/definitions/TextDocumentIdentifier'
          description: The text document.
      required:
      - textDocument
    FileChangeType:
      description: The file event type.
      enum:
      - 1
      - 2
      - 3
      type: number
    FileEvent:
      description: An event describing a file change.
      type: object
      properties:
        uri:
          description: The file's URI.
          type: string
        type:
          description: The change type.
          type: number
      required:
      - type
      - uri
    FormattingOptions:
      description: Value-object describing what options formatting should use.
      type: object
      additionalProperties:
        type:
        - string
        - number
        - boolean
      properties:
        tabSize:
          description: Size of a tab in spaces.
          type: number
        insertSpaces:
          description: Prefer spaces over tabs.
          type: boolean
      required:
      - insertSpaces
      - tabSize
    Hover:
      description: The result of a hover request.
      type: object
      properties:
        contents:
          description: The hover's content
          anyOf:
          - type: object
            properties:
              language:
                type: string
              value:
                type: string
            required:
            - language
            - value
          - type: array
            items:
              anyOf:
              - type: object
                properties:
                  language:
                    type: string
                  value:
                    type: string
                required:
                - language
                - value
              - type: string
          - type: string
        range:
          description: "An optional range is a range inside a text document \nthat\
            \ is used to visualize a hover, e.g. by changing the background color."
          $ref: '#/definitions/Range'
      required:
      - contents
    InitializeError:
      type: object
      properties:
        retry:
          description: |-
            Indicates whether the client should retry to send the
            initialize request after showing the message provided
            in the ResponseError.
          type: boolean
      required:
      - retry
    InitializeParams:
      type: object
      properties:
        processId:
          description: |-
            The process Id of the parent process that started
            the server. Is null if the process has not been started by another process.
            If the parent process is not alive then the server should exit (see exit notification) its process.
          type: number
        rootPath:
          description: |-
            The rootPath of the workspace. Is null
            if no folder is open.
          type: string
        initializationOptions:
          description: User provided initialization options.
        capabilities:
          $ref: '#/definitions/ClientCapabilities'
          description: The capabilities provided by the client (editor)
      required:
      - capabilities
    InitializeResult:
      type: object
      properties:
        capabilities:
          $ref: '#/definitions/ServerCapabilities'
          description: The capabilities the language server provides.
      required:
      - capabilities
    Location:
      type: object
      properties:
        uri:
          type: string
        range:
          $ref: '#/definitions/Range'
      required:
      - range
      - uri
    LogMessageParams:
      type: object
      properties:
        type:
          description: The message type. See {@link MessageType}
          type: number
        message:
          description: The actual message
          type: string
      required:
      - message
      - type
    MarkedString:
      anyOf:
      - type: object
        properties:
          language:
            type: string
          value:
            type: string
        required:
        - language
        - value
      - type: string
    Message:
      type: object
      properties:
        jsonrpc:
          type: string
      required:
      - jsonrpc
    MessageActionItem:
      type: object
      properties:
        title:
          description: A short title like 'Retry', 'Open Log' etc.
          type: string
          title: title
      required:
      - title
    MessageType:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: number
    NotificationMessage:
      type: object
      properties:
        method:
          description: The method to be invoked.
          type: string
        params:
          description: The notification's params.
        jsonrpc:
          type: string
      required:
      - jsonrpc
      - method
    ParameterInformation:
      description: |-
        Represents a parameter of a callable-signature. A parameter can
        have a label and a doc-comment.
      type: object
      properties:
        label:
          description: |-
            The label of this parameter. Will be shown in
            the UI.
          type: string
        documentation:
          description: |-
            The human-readable doc-comment of this parameter. Will be shown
            in the UI but can be omitted.
          type: string
      required:
      - label
    Position:
      type: object
      properties:
        line:
          description: Line position in a document (zero-based).
          type: number
        character:
          description: Character offset on a line in a document (zero-based).
          type: number
      required:
      - character
      - line
    PublishDiagnosticsParams:
      type: object
      properties:
        uri:
          description: The URI for which diagnostic information is reported.
          type: string
        diagnostics:
          description: An array of diagnostic information items.
          type: array
          items:
            $ref: '#/definitions/Diagnostic'
      required:
      - diagnostics
      - uri
    Range:
      type: object
      properties:
        start:
          $ref: '#/definitions/Position'
          description: The range's start position.
        end:
          $ref: '#/definitions/Position'
          description: The range's end position.
      required:
      - end
      - start
    ReferenceContext:
      type: object
      properties:
        includeDeclaration:
          description: Include the declaration of the current symbol.
          type: boolean
      required:
      - includeDeclaration
    ReferenceParams:
      type: object
      properties:
        context:
          $ref: '#/definitions/ReferenceContext'
        textDocument:
          $ref: '#/definitions/TextDocumentIdentifier'
          description: The text document.
        position:
          $ref: '#/definitions/Position'
          description: The position inside the text document.
      required:
      - context
      - position
      - textDocument
    RenameParams:
      type: object
      properties:
        textDocument:
          $ref: '#/definitions/TextDocumentIdentifier'
          description: The document to format.
        position:
          $ref: '#/definitions/Position'
          description: The position at which this request was sent.
        newName:
          description: |-
            The new name of the symbol. If the given name is not valid the
            request must return a [ResponseError](#ResponseError) with an
            appropriate message set.
          type: string
      required:
      - newName
      - position
      - textDocument
    RequestMessage:
      type: object
      properties:
        id:
          description: The request id.
          type:
          - string
          - number
        method:
          description: The method to be invoked.
          type: string
        params:
          description: The method's params.
        jsonrpc:
          type: string
      required:
      - id
      - jsonrpc
      - method
    ResponseError:
      $ref: '#/definitions/ResponseError<D>'
    ResponseError<D>:
      type: object
      properties:
        code:
          description: A number indicating the error type that occurred.
          type: number
        message:
          description: A string providing a short description of the error.
          type: string
        data:
          description: |-
            A Primitive or Structured value that contains additional
            information about the error. Can be omitted.
          $ref: '#/definitions/D'
      required:
      - code
      - message
    ResponseError<any>:
      type: object
      properties:
        code:
          description: A number indicating the error type that occurred.
          type: number
        message:
          description: A string providing a short description of the error.
          type: string
        data:
          description: |-
            A Primitive or Structured value that contains additional
            information about the error. Can be omitted.
      required:
      - code
      - message
    ResponseMessage:
      type: object
      properties:
        id:
          description: The request id.
          type:
          - string
          - number
        result:
          description: |-
            The result of a request. This can be omitted in
            the case of an error.
        error:
          description: The error object in case a request fails.
          $ref: '#/definitions/ResponseError<any>'
        jsonrpc:
          type: string
      required:
      - id
      - jsonrpc
    ServerCapabilities:
      type: object
      properties:
        textDocumentSync:
          description: Defines how text documents are synced.
          type: number
        hoverProvider:
          description: The server provides hover support.
          type: boolean
        completionProvider:
          description: The server provides completion support.
          $ref: '#/definitions/CompletionOptions'
        signatureHelpProvider:
          description: The server provides signature help support.
          $ref: '#/definitions/SignatureHelpOptions'
        definitionProvider:
          description: The server provides goto definition support.
          type: boolean
        referencesProvider:
          description: The server provides find references support.
          type: boolean
        documentHighlightProvider:
          description: The server provides document highlight support.
          type: boolean
        documentSymbolProvider:
          description: The server provides document symbol support.
          type: boolean
        workspaceSymbolProvider:
          description: The server provides workspace symbol support.
          type: boolean
        codeActionProvider:
          description: The server provides code actions.
          type: boolean
        codeLensProvider:
          description: The server provides code lens.
          $ref: '#/definitions/CodeLensOptions'
        documentFormattingProvider:
          description: The server provides document formatting.
          type: boolean
        documentRangeFormattingProvider:
          description: The server provides document range formatting.
          type: boolean
        documentOnTypeFormattingProvider:
          description: The server provides document formatting on typing.
          $ref: '#/definitions/DocumentOnTypeFormattingOptions'
        renameProvider:
          description: The server provides rename support.
          type: boolean
    ShowMessageParams:
      type: object
      properties:
        type:
          description: The message type. See {@link MessageType}.
          type: number
        message:
          description: The actual message.
          type: string
      required:
      - message
      - type
    ShowMessageRequestParams:
      type: object
      properties:
        type:
          description: The message type. See {@link MessageType}
          type: number
        message:
          description: The actual message
          type: string
        actions:
          description: The message action items to present.
          type: array
          items:
            $ref: '#/definitions/MessageActionItem'
      required:
      - message
      - type
    SignatureHelp:
      description: |-
        Signature help represents the signature of something
        callable. There can be multiple signature but only one
        active and only one active parameter.
      type: object
      properties:
        signatures:
          description: One or more signatures.
          type: array
          items:
            $ref: '#/definitions/SignatureInformation'
        activeSignature:
          description: The active signature.
          type: number
        activeParameter:
          description: The active parameter of the active signature.
          type: number
      required:
      - signatures
    SignatureHelpOptions:
      description: Signature help options.
      type: object
      properties:
        triggerCharacters:
          description: The characters that trigger signature help automatically.
          type: array
          items:
            type: string
    SignatureInformation:
      description: |-
        Represents the signature of something callable. A signature
        can have a label, like a function-name, a doc-comment, and
        a set of parameters.
      type: object
      properties:
        label:
          description: |-
            The label of this signature. Will be shown in
            the UI.
          type: string
        documentation:
          description: |-
            The human-readable doc-comment of this signature. Will be shown
            in the UI but can be omitted.
          type: string
        parameters:
          description: The parameters of this signature.
          type: array
          items:
            $ref: '#/definitions/ParameterInformation'
      required:
      - label
    SymbolInformation:
      description: |-
        Represents information about programming constructs like variables, classes,
        interfaces etc.
      type: object
      properties:
        name:
          description: The name of this symbol.
          type: string
        kind:
          description: The kind of this symbol.
          type: number
        location:
          $ref: '#/definitions/Location'
          description: The location of this symbol.
        containerName:
          description: The name of the symbol containing this symbol.
          type: string
      required:
      - kind
      - location
      - name
    SymbolKind:
      description: A symbol kind.
      enum:
      - 1
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      - 16
      - 17
      - 18
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      type: number
    TextDocumentContentChangeEvent:
      description: |-
        An event describing a change to a text document. If range and rangeLength are omitted
        the new text is considered to be the full content of the document.
      type: object
      properties:
        range:
          description: The range of the document that changed.
          $ref: '#/definitions/Range'
        rangeLength:
          description: The length of the range that got replaced.
          type: number
        text:
          description: The new text of the document.
          type: string
      required:
      - text
    TextDocumentIdentifier:
      type: object
      properties:
        uri:
          description: The text document's URI.
          type: string
      required:
      - uri
    TextDocumentItem:
      type: object
      properties:
        uri:
          description: The text document's URI.
          type: string
        languageId:
          description: The text document's language identifier.
          type: string
        version:
          description: |-
            The version number of this document (it will strictly increase after each
            change, including undo/redo).
          type: number
        text:
          description: The content of the opened text document.
          type: string
      required:
      - languageId
      - text
      - uri
      - version
    TextDocumentPositionParams:
      type: object
      properties:
        textDocument:
          $ref: '#/definitions/TextDocumentIdentifier'
          description: The text document.
        position:
          $ref: '#/definitions/Position'
          description: The position inside the text document.
      required:
      - position
      - textDocument
    TextDocumentSyncKind:
      description: Defines how the host (editor) should sync document changes to the
        language server.
      enum:
      - 0
      - 1
      - 2
      type: number
    TextEdit:
      type: object
      properties:
        range:
          $ref: '#/definitions/Range'
          description: |-
            The range of the text document to be manipulated. To insert
            text into a document create a range where start === end.
        newText:
          description: |-
            The string to be inserted. For delete operations use an
            empty string.
          type: string
      required:
      - newText
      - range
    VersionedTextDocumentIdentifier:
      type: object
      properties:
        version:
          description: The version number of this document.
          type: number
        uri:
          description: The text document's URI.
          type: string
      required:
      - uri
      - version
    WorkspaceEdit:
      type: object
      properties:
        changes:
          description: Holds changes to existing resources.
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/definitions/TextEdit'
      required:
      - changes
    WorkspaceSymbolParams:
      description: The parameters of a Workspace Symbol Request.
      type: object
      properties:
        query:
          description: A non-empty query string
          type: string
      required:
      - query
    textDocumentCodeActionResponse:
      description: the Response of textDocument/codeAction
      type: array
      items:
        $ref: '#/definitions/Command'
    textDocumentCodeLensResponse:
      description: the Response of textDocument/codeLens
      type: array
      items:
        $ref: '#/definitions/CodeLens'
    textDocumentCompletionResponse:
      anyOf:
      - $ref: '#/definitions/CompletionList'
      - type: array
        items:
          $ref: '#/definitions/CompletionItem'
    textDocumentFormattingResponse:
      description: the Response of textDocument/formatting
      type: array
      items:
        $ref: '#/definitions/TextEdit'
    textDocumentOnTypeFormattingResponse:
      description: the Response of textDocument/onTypeFormatting
      type: array
      items:
        $ref: '#/definitions/TextEdit'
    textDocumentRangeFormattingResponse:
      description: the Response of textDocument/rangeFormatting
      type: array
      items:
        $ref: '#/definitions/TextEdit'
    workspaceSymbolResponse:
      description: the Response of workspace/symbol
      type: array
      items:
        $ref: '#/definitions/SymbolInformation'
paths:
  $/cancelRequest:
    notification:
      type: Notification
      attrs:
        method: $/cancelRequest
        params:
          $ref: '#/components/schemas/CancelParams'
      description: '>**New:** The base protocol now offers support for request cancellation.
        To cancel a request, a notification message with the following properties
        is sent:'
  initialize:
    request:
      type: Request
      attrs:
        method: initialize
        params:
          $ref: '#/components/schemas/InitializeParams'
      description: "The initialize request is sent as the first request from the client\
        \ to the server. If the server receives request or notification before the\
        \ `initialize` request it should act as follows:\n\n* for a request the respond\
        \ should be errored with `code: -32001`. The message can be picked by the\
        \ server. \n* notifications should be dropped."
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/InitializeResult'
  shutdown:
    request:
      type: Request
      attrs:
        method: shutdown
        params: undefined
      description: The shutdown request is sent from the client to the server. It
        asks the server to shut down, but to not exit (otherwise the response might
        not be delivered correctly to the client). There is a separate exit notification
        that asks the server to exit.
    response:
      type: Response
      attrs:
        result: undefined
        error: code and message set in case an exception happens during shutdown request.
  exit:
    notification:
      type: Notification
      attrs:
        method: exit
        params: undefined
      description: |-
        A notification to ask the server to exit its process.
        The server should exit with `success` code 0 if the shutdown request has been received before; otherwise with `error` code 1.
  window/showMessage:
    notification:
      type: Notification
      attrs:
        method: window/showMessage
        params:
          $ref: '#/components/schemas/ShowMessageParams'
      description: The show message notification is sent from a server to a client
        to ask the client to display a particular message in the user interface.
  window/showMessageRequest:
    request:
      type: Request
      attrs:
        method: window/showMessageRequest
        params:
          $ref: '#/components/schemas/ShowMessageRequestParams'
      description: '>**New:** The show message request is sent from a server to a
        client to ask the client to display a particular message in the user interface.
        In addition to the show message notification the request allows to pass actions
        and to wait for an answer from the client.'
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/MessageActionItem'
        error: code and message set in case an exception happens during showing a
          message.
  window/logMessage:
    notification:
      type: Notification
      attrs:
        method: window/logMessage
        params:
          $ref: '#/components/schemas/LogMessageParams'
      description: The log message notification is sent from the server to the client
        to ask the client to log a particular message.
  telemetry/event:
    notification:
      type: Notification
      attrs:
        method: telemetry/event
        params: any
      description: '>**New:** The telemetry notification is sent from the server to
        the client to ask the client to log a telemetry event.'
  workspace/didChangeConfiguration:
    notification:
      type: Notification
      attrs:
        method: workspace/didChangeConfiguration
        params:
          $ref: '#/components/schemas/DidChangeConfigurationParams'
      description: A notification sent from the client to the server to signal the
        change of configuration settings.
  textDocument/didOpen:
    notification:
      type: Notification
      attrs:
        method: textDocument/didOpen
        params:
          $ref: '#/components/schemas/DidOpenTextDocumentParams'
      description: The document open notification is sent from the client to the server
        to signal newly opened text documents. The document's truth is now managed
        by the client and the server must not try to read the document's truth using
        the document's uri.
  textDocument/didChange:
    notification:
      type: Notification
      attrs:
        method: textDocument/didChange
        params:
          $ref: '#/components/schemas/DidChangeTextDocumentParams'
      description: '>**Changed:** The document change notification is sent from the
        client to the server to signal changes to a text document. In 2.0 the shape
        of the params has changed to include proper version numbers and language ids.'
  textDocument/didClose:
    notification:
      type: Notification
      attrs:
        method: textDocument/didClose
        params:
          $ref: '#/components/schemas/DidCloseTextDocumentParams'
      description: |-
        The document close notification is sent from the client to the server when the document got closed in the client. The document's truth now exists where the document's uri points to (e.g. if the document's uri is a file uri the truth now exists on disk).

        >**Changed:** In 2.0 the params are of type `DidCloseTextDocumentParams` which contains a reference to a text document.
  workspace/didChangeWatchedFiles:
    notification:
      type: Notification
      attrs:
        method: workspace/didChangeWatchedFiles
        params:
          $ref: '#/components/schemas/DidChangeWatchedFilesParams'
      description: The watched files notification is sent from the client to the server
        when the client detects changes to files watched by the language client.
  textDocument/publishDiagnostics:
    notification:
      type: Notification
      attrs:
        method: textDocument/publishDiagnostics
        params:
          $ref: '#/components/schemas/PublishDiagnosticsParams'
      description: Diagnostics notification are sent from the server to the client
        to signal results of validation runs.
  textDocument/completion:
    request:
      type: Request
      attrs:
        method: textDocument/completion
        params:
          $ref: '#/components/schemas/TextDocumentPositionParams'
      description: |-
        The Completion request is sent from the client to the server to compute completion items at a given cursor position. Completion items are presented in the [IntelliSense](https://code.visualstudio.com/docs/editor/editingevolved#_intellisense) user interface. If computing full completion items is expensive, servers can additionally provide a handler for the completion item resolve request ('completionItem/resolve'). This request is sent when a completion item is selected in the user interface. A typically use case is for example: the 'textDocument/completion' request doesn't fill in the `documentation` property for returned completion items since it is expensive to compute. When the item is selected in the user interface then a 'completionItem/resolve' request is sent with the selected completion item as a param. The returned completion item should have the documentation property filled in.

        >**Changed:** In 2.0 the request uses `TextDocumentPositionParams` with a proper `textDocument` and `position` property. In 1.0 the uri of the referenced text document was inlined into the params object.
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/textDocumentCompletionResponse'
  completionItem/resolve:
    request:
      type: Request
      attrs:
        method: completionItem/resolve
        params:
          $ref: '#/components/schemas/CompletionItem'
      description: The request is sent from the client to the server to resolve additional
        information for a given completion item.
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/CompletionItem'
        error: code and message set in case an exception happens during the completion
          resolve request.
  textDocument/hover:
    request:
      type: Request
      attrs:
        method: textDocument/hover
        params:
          $ref: '#/components/schemas/TextDocumentPositionParams'
      description: |-
        The hover request is sent from the client to the server to request hover information at a given text document position.

        >**Changed:** In 2.0 the request uses `TextDocumentPositionParams` with a proper `textDocument` and `position` property. In 1.0 the uri of the referenced text document was inlined into the params object.
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/Hover'
  textDocument/signatureHelp:
    request:
      type: Request
      attrs:
        method: textDocument/signatureHelp
        params:
          $ref: '#/components/schemas/TextDocumentPositionParams'
      description: |-
        The signature help request is sent from the client to the server to request signature information at a given cursor position.

        >**Changed:** In 2.0 the request uses `TextDocumentPositionParams` with proper `textDocument` and `position` properties. In 1.0 the uri of the referenced text document was inlined into the params object.
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/SignatureHelp'
  textDocument/definition:
    request:
      type: Request
      attrs:
        method: textDocument/definition
        params:
          $ref: '#/components/schemas/TextDocumentPositionParams'
      description: |-
        The goto definition request is sent from the client to the server to resolve the definition location of a symbol at a given text document position.

        >**Changed:** In 2.0 the request uses `TextDocumentPositionParams` with proper `textDocument` and `position` properties. In 1.0 the uri of the referenced text document was inlined into the params object.
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/Location'
        error: code and message set in case an exception happens during the definition
          request.
  textDocument/references:
    request:
      type: Request
      attrs:
        method: textDocument/references
        params:
          $ref: '#/components/schemas/ReferenceParams'
      description: |-
        The references request is sent from the client to the server to resolve project-wide references for the symbol denoted by the given text document position.

        >**Changed:** In 2.0 the request uses `TextDocumentPositionParams` with proper `textDocument` and `position` properties. In 1.0 the uri of the referenced text document was inlined into the params object.
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/Location'
        error: code and message set in case an exception happens during the reference
          request.
  textDocument/documentHighlight:
    request:
      type: Request
      attrs:
        method: textDocument/documentHighlight
        params:
          $ref: '#/components/schemas/TextDocumentPositionParams'
      description: "The document highlight request is sent from the client to the\
        \ server to resolve a document highlights for a given text document position.\n\
        For programming languages this usually highlights all references to the symbol\
        \ scoped to this file. However we kept 'textDocument/documentHighlight' \n\
        and 'textDocument/references' separate requests since the first one is allowed\
        \ to be more fuzzy. Symbol matches usually have a `DocumentHighlightKind`\n\
        of `Read` or `Write` whereas fuzzy or textual matches use `Text`as the kind.\n\
        \n>**Changed:** In 2.0 the request uses `TextDocumentPositionParams` with\
        \ proper `textDocument` and `position` properties. In 1.0 the uri of the referenced\
        \ text document was inlined into the params object."
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/DocumentHighlight'
  textDocument/documentSymbol:
    request:
      type: Request
      attrs:
        method: textDocument/documentSymbol
        params:
          $ref: '#/components/schemas/DocumentSymbolParams'
      description: |-
        The document symbol request is sent from the client to the server to list all symbols found in a given text document.

        >**Changed:** In 2.0 the request uses `DocumentSymbolParams` instead of a single uri.
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/SymbolInformation'
  workspace/symbol:
    request:
      type: Request
      attrs:
        method: workspace/symbol
        params:
          $ref: '#/components/schemas/WorkspaceSymbolParams'
      description: The workspace symbol request is sent from the client to the server
        to list project-wide symbols matching the query string.
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/workspaceSymbolResponse'
        error: code and message set in case an exception happens during the workspace
          symbol request.
  textDocument/codeAction:
    request:
      type: Request
      attrs:
        method: textDocument/codeAction
        params:
          $ref: '#/components/schemas/CodeActionParams'
      description: The code action request is sent from the client to the server to
        compute commands for a given text document and range. The request is triggered
        when the user moves the cursor into a problem marker in the editor or presses
        the lightbulb associated with a marker.
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/textDocumentCodeActionResponse'
        error: code and message set in case an exception happens during the code action
          request.
  textDocument/codeLens:
    request:
      type: Request
      attrs:
        method: textDocument/codeLens
        params:
          $ref: '#/components/schemas/CodeLensParams'
      description: |-
        The code lens request is sent from the client to the server to compute code lenses for a given text document.

        >**Changed:** In 2.0 the request uses `CodeLensParams` instead of a single uri.
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/textDocumentCodeLensResponse'
  codeLens/resolve:
    request:
      type: Request
      attrs:
        method: codeLens/resolve
        params:
          $ref: '#/components/schemas/CodeLens'
      description: The code lens resolve request is sent from the client to the server
        to resolve the command for a given code lens item.
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/CodeLens'
        error: code and message set in case an exception happens during the code lens
          resolve request.
  textDocument/documentLink:
    request:
      type: Request
      attrs:
        method: textDocument/documentLink
        params:
          $ref: '#/components/schemas/DocumentLinkParams'
      description: The document links request is sent from the client to the server
        to request the location of links in a document.
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/DocumentLink'
  documentLink/resolve:
    request:
      type: Request
      attrs:
        method: documentLink/resolve
        params:
          $ref: '#/components/schemas/DocumentLink'
      description: The document link resolve request is sent from the client to the
        server to resolve the target of a given document link.
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/DocumentLink'
        error: code and message set in case an exception happens during the document
          link resolve request.
  textDocument/formatting:
    request:
      type: Request
      attrs:
        method: textDocument/formatting
        params:
          $ref: '#/components/schemas/DocumentFormattingParams'
      description: The document formatting request is sent from the server to the
        client to format a whole document.
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/textDocumentFormattingResponse'
        error: code and message set in case an exception happens during the formatting
          request.
  textDocument/rangeFormatting:
    request:
      type: Request
      attrs:
        method: textDocument/rangeFormatting
        params:
          $ref: '#/components/schemas/DocumentRangeFormattingParams'
      description: The document range formatting request is sent from the client to
        the server to format a given range in a document.
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/textDocumentRangeFormattingResponse'
        error: code and message set in case an exception happens during the range
          formatting request.
  textDocument/onTypeFormatting:
    request:
      type: Request
      attrs:
        method: textDocument/onTypeFormatting
        params:
          $ref: '#/components/schemas/DocumentOnTypeFormattingParams'
      description: The document on type formatting request is sent from the client
        to the server to format parts of the document during typing.
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/textDocumentOnTypeFormattingResponse'
        error: code and message set in case an exception happens during the range
          formatting request.
  textDocument/rename:
    request:
      type: Request
      attrs:
        method: textDocument/rename
        params:
          $ref: '#/components/schemas/RenameParams'
      description: The rename request is sent from the client to the server to perform
        a workspace-wide rename of a symbol.
    response:
      type: Response
      attrs:
        result:
          $ref: '#/components/schemas/WorkspaceEdit'
        error: code and message set in case an exception happens during the rename
          request.
